IF NOT EXISTS(SELECT Name FROM sys.databases WHERE Name = 'TSD') BEGIN
	CREATE DATABASE TSD;
END

GO

USE TSD;

GO

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Banks') BEGIN
	CREATE TABLE Banks (
		bank_name VARCHAR(255) NOT NULL, 
		password VARCHAR(255) NOT NULL, 
		CONSTRAINT PK_BANKS PRIMARY KEY (bank_name)
	);
END
ELSE BEGIN
	IF COL_LENGTH('dbo.Banks', 'bank_name') IS NULL BEGIN
		ALTER TABLE Banks ADD bank_name VARCHAR(255) NOT NULL;
	END
	IF COL_LENGTH('dbo.Banks', 'password') IS NULL BEGIN
		ALTER TABLE Banks ADD password VARCHAR(255) DEFAULT 'defpass' NOT NULL;
	END
END

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Screens') BEGIN
	CREATE TABLE Screens (
		bank_name VARCHAR(255) NOT NULL, 
		screen_id INT IDENTITY(1, 1) NOT NULL,
		is_active BIT NOT NULL, 
		screen_title VARCHAR(255) NOT NULL, 
		CONSTRAINT PK_SCREENS PRIMARY KEY (bank_name, screen_id), 
		CONSTRAINT FK_SCREENS_BANKS FOREIGN KEY (bank_name) REFERENCES Banks(bank_name) ON DELETE CASCADE ON UPDATE CASCADE
	);
END
ELSE BEGIN
	IF COL_LENGTH('dbo.Screens', 'bank_name') IS NULL BEGIN
		ALTER TABLE Screens ADD bank_name VARCHAR(255) NOT NULL;
	END
	IF COL_LENGTH('dbo.Screens', 'screen_id') IS NULL BEGIN
		ALTER TABLE Screens ADD screen_id INT IDENTITY(1, 1) NOT NULL;
	END
	IF COL_LENGTH('dbo.Screens', 'is_active') IS NULL BEGIN
		ALTER TABLE Screens ADD is_active BIT NOT NULL;
	END
	IF COL_LENGTH('dbo.Screens', 'screen_title') IS NULL BEGIN
		ALTER TABLE Screens ADD screen_title VARCHAR(255) NOT NULL;
	END
END

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Buttons') BEGIN
	CREATE TABLE Buttons (
		bank_name VARCHAR(255) NOT NULL, 
		screen_id INT NOT NULL, 
		button_id INT IDENTITY(1, 1) NOT NULL, 
		type VARCHAR(255) NOT NULL, 
		name_en VARCHAR(255) NOT NULL, 
		name_ar NVARCHAR(255) NOT NULL, 
		service VARCHAR(255), 
		message_en VARCHAR(1000), 
		message_ar NVARCHAR(1000), 
		CONSTRAINT PK_BUTTONS PRIMARY KEY (bank_name, screen_id, button_id), 
		CONSTRAINT FK_BUTTONS_SCREENS FOREIGN KEY (bank_name, screen_id) REFERENCES Screens(bank_name, screen_id) ON DELETE CASCADE ON UPDATE CASCADE
	);
END
ELSE BEGIN
	IF COL_LENGTH('dbo.Buttons', 'bank_name') IS NULL BEGIN
		ALTER TABLE Buttons ADD bank_name VARCHAR(255) NOT NULL;
	END
	IF COL_LENGTH('dbo.Buttons', 'screen_id') IS NULL BEGIN
		ALTER TABLE Buttons ADD screen_id INT NOT NULL;
	END
	IF COL_LENGTH('dbo.Buttons', 'button_id') IS NULL BEGIN
		ALTER TABLE Buttons ADD button_id INT IDENTITY(1, 1) NOT NULL;
	END
	IF COL_LENGTH('dbo.Buttons', 'type') IS NULL BEGIN
		ALTER TABLE Buttons ADD type VARCHAR(255) NOT NULL;
	END
	IF COL_LENGTH('dbo.Buttons', 'name_en') IS NULL BEGIN
		ALTER TABLE Buttons ADD name_en VARCHAR(255) NOT NULL;
	END
	IF COL_LENGTH('dbo.Buttons', 'name_ar') IS NULL BEGIN
		ALTER TABLE Buttons ADD name_ar NVARCHAR(255) NOT NULL;
	END
	IF COL_LENGTH('dbo.Buttons', 'service') IS NULL BEGIN
		ALTER TABLE Buttons ADD service VARCHAR(255);
	END
	IF COL_LENGTH('dbo.Buttons', 'message_en') IS NULL BEGIN
		ALTER TABLE Buttons ADD message_en VARCHAR(1000);
	END
	IF COL_LENGTH('dbo.Buttons', 'message_ar') IS NULL BEGIN
		ALTER TABLE Buttons ADD message_ar NVARCHAR(1000);
	END
END

DECLARE @drop_button_constraints_command VARCHAR(1000) = '';
SELECT @drop_button_constraints_command += 'ALTER TABLE Buttons DROP CONSTRAINT ' + CONSTRAINT_NAME + '; ' FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS 
WHERE CONSTRAINT_NAME LIKE 'PK[_][_]Buttons%' OR CONSTRAINT_NAME LIKE 'FK[_][_]Buttons%';
EXECUTE(@drop_button_constraints_command);

DECLARE @drop_screen_constraints_command VARCHAR(1000) = '';
SELECT @drop_screen_constraints_command += 'ALTER TABLE Screens DROP CONSTRAINT ' + CONSTRAINT_NAME + '; ' FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS 
WHERE CONSTRAINT_NAME LIKE 'PK[_][_]Screens%' OR CONSTRAINT_NAME LIKE 'FK[_][_]Screens%';
EXECUTE(@drop_screen_constraints_command);

DECLARE @drop_bank_constraints_command VARCHAR(1000) = '';
SELECT @drop_bank_constraints_command += 'ALTER TABLE Banks DROP CONSTRAINT ' + CONSTRAINT_NAME + '; ' FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS 
WHERE CONSTRAINT_NAME LIKE 'PK[_][_]Banks%';
EXECUTE(@drop_bank_constraints_command);

GO

IF (SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'PK_BANKS') = 0 BEGIN
	ALTER TABLE Banks ADD CONSTRAINT PK_BANKS PRIMARY KEY(bank_name);
END

IF (SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'PK_SCREENS') = 0 BEGIN
	ALTER TABLE Screens ADD CONSTRAINT PK_SCREENS PRIMARY KEY(bank_name, screen_id);
END
IF (SELECT COUNT(*) FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_SCREENS_BANKS') = 0 BEGIN
	ALTER TABLE Screens ADD CONSTRAINT FK_SCREENS_BANKS FOREIGN KEY (bank_name) REFERENCES Banks(bank_name) ON DELETE CASCADE ON UPDATE CASCADE;
END

IF (SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME = 'PK_BUTTONS') = 0 BEGIN
	ALTER TABLE Buttons ADD CONSTRAINT PK_BUTTONS PRIMARY KEY (bank_name, screen_id, button_id);
END
IF (SELECT COUNT(*) FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME = 'FK_BUTTONS_SCREENS') = 0 BEGIN
	ALTER TABLE Buttons ADD CONSTRAINT FK_BUTTONS_SCREENS FOREIGN KEY (bank_name, screen_id) REFERENCES Screens(bank_name, screen_id) ON DELETE CASCADE ON UPDATE CASCADE;
END
